/* RPG: Em busca da aprova√ß√£o. 
Voc√™ √© um aluno do Senai que est√° cursando a unidade curricular de L√≥gica de Programa√ß√£o e est√° em busca da aprova√ß√£o nesta UC, cujo o professor √© o Bauminha. 
Voc√™ deve iniciar o jogo indicando o seu personagem.
In√≠cio do Jogo: escolha seu personagem
Personagem Miro: √© um jovem aprendiz com um intelecto afiado e uma paix√£o pela teoria da programa√ß√£o.
Habilidades: 
Estudioso; Persistente e Criativo
Fraqueza Principal: Dificuldade com Press√£o. Embora seja persistente, em momentos de alta press√£o (como um tempo limitado para entregar um projeto ou uma avalia√ß√£o direta com o Bauminha), Miro pode travar ou ter sua performance reduzida. O medo de errar e a necessidade de perfei√ß√£o podem ser paralisantes.
Impacto no Jogo: Em desafios com tempo cronometrado ou sob observa√ß√£o direta do professor, Miro pode sofrer penalidades maiores se cometer erros ou n√£o conseguir entregar a solu√ß√£o com a agilidade esperada. Sua mente brilhante pode falhar sob estresse.
Mochila: livros de programa√ß√£o, caderno de anota√ß√µes, garrafa de √°gua. 
Personagem: M√°rio
M√°rio: √© um colega vibrante, que aprende fazendo e adora compartilhar seu conhecimento.
Habilidades: 
Pr√°tico; Curioso e Questionador; Bom em Apresenta√ß√µes.
Fraqueza Principal: Impaci√™ncia com a Teoria Abstrata: M√°rio prefere ir direto para o c√≥digo e testar, o que o faz n√£o prestar tanta aten√ß√£o em aulas puramente te√≥ricas ou na memoriza√ß√£o de defini√ß√µes abstratas. Conceitos sem aplica√ß√£o imediata podem entedi√°-lo.
Impacto no Jogo: Quando o Professor Bauminha fizer perguntas que exigem conhecimento te√≥rico espec√≠fico, defini√ß√µes formais ou a aplica√ß√£o de regras abstratas sem um contexto pr√°tico claro, M√°rio ter√° mais dificuldade e poder√° perder pontos ou tempo, precisando de mais tentativas para acertar.
Mochila: celular, fone de ouvido, bala de goma
Seu objetivo √© claro: responder a 3 perguntas sobre L√≥gica de Programa√ß√£o. Para ser aprovado, voc√™ precisa acertar 2 ou mais delas. Caso contr√°rio, ser√° reprovado.
Cada desafio ser√° uma pergunta de m√∫ltipla escolha, com duas respostas. Suas respostas, o uso dos itens da mochila e a sua performance ser√£o avaliados. O Professor Bauminha reagir√° diretamente √†s suas escolhas, e o resultado final determinar√° seu destino na UC. */

programa
{
  funcao inicio()
  {
    // Declara√ß√£o de vari√°veis para armazenar dados do jogador e controle do jogo
    cadeia nomeJogador, personagemEscolhido  
    inteiro respostasCorretas = 0, escolhaOPersonagem, respostapergunta1, respostaPergunta2, respostaPergunta3
    logico aprovadoBauminha = falso
    logico pergunata1Acertada = falso
    logico pergunata2Acertada = falso
    logico pergunata3Acertada = falso
    inteiro tentativasPergunta1 = 0
    inteiro tentativasPergunta2 = 0
    inteiro tentativasPergunta3 = 0

    // Imprime o cabe√ßalho do jogo com linhas decorativas e o t√≠tulo
    escreva("--------------------------------------------------\n")
    escreva("           RPG: EM BUSCA DA APROVA√á√ÉO             \n")
    escreva("--------------------------------------------------\n")

    // Apresenta a miss√£o do jogo para o jogador
    escreva("Sua miss√£o: Ser aprovado na UC de L√≥gica de Programa√ß√£o do Professor Bauminha.\n\n")

    // Solicita que o jogador digite seu nome
    escreva("Qual √© o seu nome? ")
    leia(nomeJogador)

    // Sa√∫da o jogador pelo nome e solicita que escolha um personagem
    escreva("\n Ol√°, "+  nomeJogador + " Escolha o seu personagem\n")
    escreva("1. Miro: Estudioso, Persistente, Criativo\n")
    escreva("2. M√°rio: Pr√°tico, Curioso, Bom em Apresenta√ß√µes\n")
    escreva("Sua escolha: 1 ou 2: ")
    leia(escolhaOPersonagem)

    // Estrutura de escolha para definir qual personagem o jogador escolheu
    escolha (escolhaOPersonagem) {
      caso 1:
        personagemEscolhido = "Miro"              // Atribui o personagem Miro
        escreva("\nVoc√™ escolheu Miro.\n")        // Confirma a escolha ao jogador
        pare
      caso 2:
        personagemEscolhido = "M√°rio"             // Atribui o personagem M√°rio
        escreva("\nVoc√™ escolheu M√°rio.\n")       // Confirma a escolha ao jogador
        pare
      caso contrario:
        escreva("\nEscolha inv√°lida. Voc√™ ser√° Miro por padr√£o.\n") // Trata entrada inv√°lida
        personagemEscolhido = "Miro"              // Define Miro como personagem padr√£o
        pare
    }

    // Separador visual para in√≠cio do jogo
    escreva("\n--------------------------------------------------\n")
    escreva("------------------In√≠cio do jogo--------------------\n")
    escreva("--------------------------------------------------\n\n")

    // Explica as regras do desafio: tr√™s perguntas e aprova√ß√£o com 2 ou mais acertos
    escreva("O Professor Bauminha entra na sala e avisa que voc√™ responder√° um desafio. Ser√£o tr√™s perguntas. Acerte duas ou mais para a aprova√ß√£o!'\n\n")
   
    // Pergunta 1
    escreva("--- Pergunta 1/3 ---\n")
    escreva("Bauminha: 'Como funciona uma vari√°vel no Portugol?'\n")
    escreva("1. √â um local fixo na tela para exibir mensagens.\n")
    escreva("2. √â um espa√ßo na mem√≥ria para armazenar dados que podem mudar.\n")
    escreva("3. √â um comando para iniciar o programa.\n")
   
    // Loop para permitir at√© 2 tentativas para responder a pergunta 1
    faca {
      escreva("\nSua resposta (1,2 ou 3): ")
      leia(respostapergunta1)       // L√™ a resposta do jogador
      tentativasPergunta1++         // Incrementa o n√∫mero de tentativas da pergunta 1

      // Verifica se a resposta est√° correta (resposta correta = 2)
      se (respostapergunta1 == 2) {
        escreva("\nCORRETO! Bauminha: 'Muito bem, parab√©ns, voc√™ acertou üëèüèΩ'\n") // Feedback positivo
        respostasCorretas++           // Incrementa o contador de respostas certas
        pergunata1Acertada = verdadeiro // Marca pergunta 1 como acertada
      } senao {
        // Feedback para resposta incorreta
        escreva("\nINCORRETO. Bauminha: 'Infelizmente voc√™ n√£o acertou essa quest√£o, tente novamente ‚òπÔ∏è.'\n")
       
        // Verifica se esta foi a primeira tentativa incorreta
        se (tentativasPergunta1 == 1) {
          escreva("Voc√™ tem mais uma tentativa para esta pergunta.\n") // Aviso de nova chance
        } senao {
          escreva("Voc√™ esgotou suas tentativas para esta pergunta. O Bauminha parece um pouco decepcionado üòø.\n") // Aviso de fim das tentativas
          pare  // Sai do loop da pergunta ap√≥s 2 tentativas erradas
        }
      }
    } enquanto (nao pergunata1Acertada e tentativasPergunta1 < 1) // Continua enquanto n√£o acertar e tentativas < 2

    // Pergunta 2
    escreva("\n--- Pergunta 2/3 ---\n")
    escreva("Bauminha: 'O que √© um pseudoc√≥digo?'\n")
    escreva("1. Uma linguagem de programa√ß√£o real para computadores.\n")
    escreva("2. Um v√≠rus de computador.\n")
    escreva("3. Uma forma de representar algoritmos usando linguagem informal n√£o execut√°vel.\n")

    // Loop para at√© 2 tentativas para a pergunta 2
    faca {
      escreva("\nSua resposta (1, 2 ou 3): ")
      leia(respostaPergunta2)      // L√™ resposta do jogador
      tentativasPergunta2++        // Incrementa n√∫mero de tentativas da pergunta 2

      // Avalia a resposta usando estrutura escolha (switch)
      escolha (respostaPergunta2) {
        caso 3: // Resposta correta
          escreva("\nCORRETO! Bauminha: 'Muito bem, parab√©ns, voc√™ passou üëèüèΩ.'\n")
          respostasCorretas++
          pergunata2Acertada = verdadeiro
          pare // Sai do loop da pergunta ao acertar
        caso contrario:
          escreva("\nINCORRETO. Bauminha: 'Precisa rever seus conceitos, " + nomeJogador + ".ü§® '\n")
          se (tentativasPergunta2 == 1) {
            escreva("Voc√™ tem mais uma tentativa para esta pergunta.\n")
          } senao {
            escreva("Voc√™ esgotou suas tentativas para esta pergunta. O Bauminha est√° triste com suas respostas ü•π.\n")
            pare // Sai do loop ap√≥s 2 tentativas erradas
          }
          pare
      }
    } enquanto (nao pergunata2Acertada e tentativasPergunta2 < 2)

    // Pergunta 3
    escreva("\n--- Pergunta 3/3 ---\n")
    escreva("Bauminha: 'Para finalizar, como funciona o /sen√£o/ no Portugol?'\n")
    escreva("1. Ele executa a primeira condi√ß√£o que for verdadeira.\n")
    escreva("2. Ele executa se a condi√ß√£o do 'se' for falsa.\n")
    escreva("3. Ele sempre executa, independentemente da condi√ß√£o.\n")

    // Loop para at√© 2 tentativas para a pergunta 3
    faca {
      escreva("\nSua resposta (1, 2 ou 3): ")
      leia(respostaPergunta3)       // L√™ resposta do jogador
      tentativasPergunta3++         // Incrementa tentativas da pergunta 3

      escolha (respostaPergunta3) {
        caso 2: // Resposta correta
          escreva("\nCORRETO! Bauminha: 'Muito bem, parab√©ns, voc√™ foi muito bem üëèüèΩ.'\n")
          respostasCorretas++
          pergunata3Acertada = verdadeiro
          pare
        caso contrario:
          escreva("\nINCORRETO. Bauminha: 'Foi mal. reveja a estrutura 'se-sen√£o', " + nomeJogador + "ü§¶üèΩ.'\n")
          se (tentativasPergunta3 == 1) {
            escreva("Voc√™ tem mais uma tentativa para esta pergunta.\n")
          } senao {
            escreva("Voc√™ esgotou suas tentativas para esta pergunta. O veredito se aproxima.\n")
            pare
          }
          pare
      }
    } enquanto (nao pergunata3Acertada e tentativasPergunta3 < 2)

    // Impress√£o do resultado final
    escreva("\n--------------------------------------------------\n")
    escreva("VEREDITO DO PROFESSOR BAUMINHA!\n")
    escreva("Voc√™ acertou " + respostasCorretas + " de 3 perguntas.\n\n")

    // Verifica se o jogador foi aprovado (2 ou mais acertos)
    se (respostasCorretas >= 2) {
      escreva("PARAB√âNS, " + nomeJogador + " (" + personagemEscolhido + ")! Voc√™ foi APROVADO na UC de L√≥gica de Programa√ß√£o!\n")
      escreva("Professor Bauminha: 'Seu esfor√ßo e dedica√ß√£o valeram a pena. Continue assim!üòÉüëèüèΩüëèüèΩüëèüèΩ'\n")
      aprovadoBauminha = verdadeiro
    } senao {
      escreva("Infelizmente, " + nomeJogador + " (" + personagemEscolhido + "), voc√™ foi REPROVADO na UC do Professor Bauminha.\n")
      escreva("Professor Bauminha: 'N√£o desanime. pratique mais e nos vemos na pr√≥xima UC! ü´£üòâ'\n")
      aprovadoBauminha = falso
    }

    // Linha final para encerrar o jogo visualmente
    escreva("--------------------------------------------------\n")
  }
}